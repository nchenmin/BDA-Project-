{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "BDA-ProjectResources"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"Link to blob storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Link to blob storage'"
		},
		"SQL Beer Review DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL Beer Review DB'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://beerstorage123.dfs.core.windows.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://KeyVault-Beer.vault.azure.net/"
		},
		"Trigger_1mg_properties_BatchIngestBeer - OLD_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"Trigger_1mg_properties_BatchIngestPipeline_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BatchIngestBeer - OLD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Batch Ingestion Beer Review DataBase",
				"activities": [
					{
						"name": "Copy_1mg",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.BeerProject"
							},
							{
								"name": "Destination",
								"value": "beercontainer/BeerReview/@{formatDateTime(pipeline().parameters.windowStart,'yy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "beer_ABV",
											"type": "Double"
										},
										"sink": {
											"name": "beer_ABV",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "beer_beerId",
											"type": "Int32"
										},
										"sink": {
											"name": "beer_beerId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "beer_brewerId",
											"type": "Int16"
										},
										"sink": {
											"name": "beer_brewerId",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "beer_name",
											"type": "String"
										},
										"sink": {
											"name": "beer_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "beer_style",
											"type": "String"
										},
										"sink": {
											"name": "beer_style",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "review_appearance",
											"type": "Double"
										},
										"sink": {
											"name": "review_appearance",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "review_palette",
											"type": "Double"
										},
										"sink": {
											"name": "review_palette",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "review_overall",
											"type": "Double"
										},
										"sink": {
											"name": "review_overall",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "review_taste",
											"type": "Double"
										},
										"sink": {
											"name": "review_taste",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "review_profileName",
											"type": "String"
										},
										"sink": {
											"name": "review_profileName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "review_aroma",
											"type": "Double"
										},
										"sink": {
											"name": "review_aroma",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "review_time",
											"type": "Int32"
										},
										"sink": {
											"name": "review_time",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "review_text",
											"type": "String"
										},
										"sink": {
											"name": "review_text",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_1mg",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_1mg_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy_1mg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"ReducedcolumnbeerDB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_1mg')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_1mg_copy1')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BatchIngestPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Batch Ingestion Beer Review DataBase",
				"activities": [
					{
						"name": "Batch Ingestion Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Batch Ingestion Data Flow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Batch Ingestion Data Flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Testing2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Batch Ingestion Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Batch Ingestion Data Flow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Batch Ingestion Data Flow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"ReducedcolumnbeerDB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Batch Ingestion Data Flow')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL Beer Review DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Beer"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "BeerProject"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL Beer Review DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BeerProcessedCSVBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link to blob storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Beer Processed",
						"container": "beercontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link to blob storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobstorageCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link to blob storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbo.BeerProject.csv",
						"container": "beercontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "beer_ABV",
						"type": "String"
					},
					{
						"name": "beer_beerId",
						"type": "String"
					},
					{
						"name": "beer_brewerId",
						"type": "String"
					},
					{
						"name": "beer_name",
						"type": "String"
					},
					{
						"name": "beer_style",
						"type": "String"
					},
					{
						"name": "review_appearance",
						"type": "String"
					},
					{
						"name": "review_palette",
						"type": "String"
					},
					{
						"name": "review_overall",
						"type": "String"
					},
					{
						"name": "review_taste",
						"type": "String"
					},
					{
						"name": "review_profileName",
						"type": "String"
					},
					{
						"name": "review_aroma",
						"type": "String"
					},
					{
						"name": "review_time",
						"type": "String"
					},
					{
						"name": "review_text",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link to blob storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_1mg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link to blob storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "beercontainer"
					},
					"columnDelimiter": "\u0001",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link to blob storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_1mg_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link to blob storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "beercontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link to blob storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_1mg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL Beer Review DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "beer_ABV",
						"type": "float",
						"precision": 15
					},
					{
						"name": "beer_beerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "beer_brewerId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "beer_name",
						"type": "varchar"
					},
					{
						"name": "beer_style",
						"type": "varchar"
					},
					{
						"name": "review_appearance",
						"type": "float",
						"precision": 15
					},
					{
						"name": "review_palette",
						"type": "float",
						"precision": 15
					},
					{
						"name": "review_overall",
						"type": "float",
						"precision": 15
					},
					{
						"name": "review_taste",
						"type": "float",
						"precision": 15
					},
					{
						"name": "review_profileName",
						"type": "varchar"
					},
					{
						"name": "review_aroma",
						"type": "float",
						"precision": 15
					},
					{
						"name": "review_time",
						"type": "int",
						"precision": 10
					},
					{
						"name": "review_text",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BeerProject"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL Beer Review DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TextBeerReview')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link to blob storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "beercontainer"
					},
					"columnDelimiter": "\u0001",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "beername",
						"type": "String"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "user",
						"type": "String"
					},
					{
						"name": "beer_beerId",
						"type": "String"
					},
					{
						"name": "BeerId_count",
						"type": "String"
					},
					{
						"name": "BeerID_Rank",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link to blob storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Link to blob storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "beercontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Link to blob storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Link to blob storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Link to blob storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL Beer Review DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Link from SQL Beer Review Database Server",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL Beer Review DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScheduleTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Testing2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2021-10-27T09:00:00",
						"endTime": "2021-12-01T09:00:00",
						"timeZone": "Singapore Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Testing2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_1mg')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "BatchIngestBeer - OLD",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": {
								"type": "Expression",
								"value": "[parameters('Trigger_1mg_properties_BatchIngestBeer - OLD_parameters_windowStart')]"
							}
						}
					},
					{
						"pipelineReference": {
							"referenceName": "BatchIngestPipeline",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": {
								"type": "Expression",
								"value": "[parameters('Trigger_1mg_properties_BatchIngestPipeline_parameters_windowStart')]"
							}
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2021-10-18T12:25:00",
						"timeZone": "Singapore Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/BatchIngestBeer - OLD')]",
				"[concat(variables('factoryId'), '/pipelines/BatchIngestPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_y90')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2021-10-17T00:27:00",
						"timeZone": "Singapore Standard Time",
						"schedule": {
							"weekDays": [
								"Saturday",
								"Friday",
								"Wednesday",
								"Thursday",
								"Tuesday",
								"Monday",
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East Asia",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Batch Ingestion Data Flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SourceDataset_1mg",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationDataset_1mg",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "TextBeerReview",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tbeer_ABV as double,\n\t\tbeer_beerId as integer,\n\t\tbeer_brewerId as short,\n\t\tbeer_name as string,\n\t\tbeer_style as string,\n\t\treview_appearance as double,\n\t\treview_palette as double,\n\t\treview_overall as double,\n\t\treview_taste as double,\n\t\treview_profileName as string,\n\t\treview_aroma as double,\n\t\treview_time as integer,\n\t\treview_text as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 select(mapColumn(\n\t\treview_overall,\n\t\treview_profileName,\n\t\treview_text\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tfilePattern:'dbo.BeerProject.csv',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tbeername as string,\n\t\trating as string,\n\t\tuser as string,\n\t\tbeer_beerId as string,\n\t\tBeerId_count as string,\n\t\tBeerID_Rank as string\n\t),\n\tfilePattern:'TextBeerProject.csv',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_1mg')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_1mg')]",
				"[concat(variables('factoryId'), '/datasets/TextBeerReview')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BlobstorageCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BeerProcessedCSVBlob",
								"type": "DatasetReference"
							},
							"name": "ReducedcolumnbeerDB"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "Rank1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\tbeer_ABV as double,\n\t\tbeer_beerId as integer,\n\t\tbeer_brewerId as integer,\n\t\tbeer_name as string,\n\t\tbeer_style as string,\n\t\treview_appearance as double,\n\t\treview_palette as double,\n\t\treview_overall as double,\n\t\treview_taste as double,\n\t\treview_profileName as string,\n\t\treview_aroma as double,\n\t\treview_time as integer,\n\t\treview_text as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 select(mapColumn(\n\t\tbeer_beerId,\n\t\tbeer_name,\n\t\treview_overall,\n\t\treview_profileName\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(beer_beerId),\n\tBeerId_count = count()) ~> Aggregate1\nAggregate1 rank(desc(BeerId_count, true),\n\toutput(BeerID_Rank as long),\n\tdense: true) ~> Rank1\nSelect1, Rank1 join(Select1@beer_beerId == Aggregate1@beer_beerId,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tbeername = beer_name,\n\t\trating = review_overall,\n\t\tuser = review_profileName,\n\t\tbeer_beerId = Aggregate1@beer_beerId,\n\t\tBeerId_count,\n\t\tBeerID_Rank\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 filter(BeerID_Rank<100) ~> Filter1\nFilter1 sort(asc(BeerID_Rank, true)) ~> Sort1\nSort1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tfilePattern:'BeerCleaned[n].csv',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tpartitionBy('hash', 1)) ~> ReducedcolumnbeerDB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BlobstorageCSV')]",
				"[concat(variables('factoryId'), '/datasets/BeerProcessedCSVBlob')]"
			]
		}
	]
}