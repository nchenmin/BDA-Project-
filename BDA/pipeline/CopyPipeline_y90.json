{
	"name": "CopyPipeline_y90",
	"properties": {
		"description": "Batch Processing",
		"activities": [
			{
				"name": "Copy_y90",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "dbo.BeerProject"
					},
					{
						"name": "Destination",
						"value": "BatchBeerDB/@{formatDateTime(pipeline().parameters.windowStart,'yy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}/BatchBeerDB"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"partitionOption": "None"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": true,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							}
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "beer_ABV",
									"type": "Double"
								},
								"sink": {
									"path": "$['beer_ABV']"
								}
							},
							{
								"source": {
									"name": "beer_beerId",
									"type": "Int32"
								},
								"sink": {
									"path": "$['beer_beerId']"
								}
							},
							{
								"source": {
									"name": "beer_brewerId",
									"type": "Int16"
								},
								"sink": {
									"path": "$['beer_brewerId']"
								}
							},
							{
								"source": {
									"name": "beer_name",
									"type": "String"
								},
								"sink": {
									"path": "$['beer_name']"
								}
							},
							{
								"source": {
									"name": "beer_style",
									"type": "String"
								},
								"sink": {
									"path": "$['beer_style']"
								}
							},
							{
								"source": {
									"name": "review_appearance",
									"type": "Double"
								},
								"sink": {
									"path": "$['review_appearance']"
								}
							},
							{
								"source": {
									"name": "review_palette",
									"type": "Double"
								},
								"sink": {
									"path": "$['review_palette']"
								}
							},
							{
								"source": {
									"name": "review_overall",
									"type": "Double"
								},
								"sink": {
									"path": "$['review_overall']"
								}
							},
							{
								"source": {
									"name": "review_taste",
									"type": "Double"
								},
								"sink": {
									"path": "$['review_taste']"
								}
							},
							{
								"source": {
									"name": "review_profileName",
									"type": "String"
								},
								"sink": {
									"path": "$['review_profileName']"
								}
							},
							{
								"source": {
									"name": "review_aroma",
									"type": "Double"
								},
								"sink": {
									"path": "$['review_aroma']"
								}
							},
							{
								"source": {
									"name": "review_text",
									"type": "String"
								},
								"sink": {
									"path": "$['review_text']"
								}
							},
							{
								"source": {
									"name": "review_time",
									"type": "Int32"
								},
								"sink": {
									"path": "$['review_time']"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SourceDataset_y90",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DestinationDataset_y90",
						"type": "DatasetReference",
						"parameters": {
							"cw_folderPath": "@{formatDateTime(pipeline().parameters.windowStart,'yy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}"
						}
					}
				]
			}
		],
		"parameters": {
			"windowStart": {
				"type": "String"
			}
		},
		"annotations": []
	}
}